package org.datagic.A_easy.array;

/**
 * Desc: 只出现一次的数字
 * Author: datagic (云瞻)
 * CreateDate: 2020/7/29 11:32 上午
 * Blog: datagic.top
 * 公众号: datagator (大数据领航员)
 */
public class Easy_0136_SingleNumber {
    /**
     * 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
     * 说明：
     * 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？
     * ---------------------------------------------------------------------------------------------------------
     * 示例 1:
     * 输入: [2,2,1]
     * 输出: 1
     * 示例 2:
     * 输入: [4,1,2,1,2]
     * 输出: 4
     * ---------------------------------------------------------------------------------------------------------
     * 题目解析：这道题的问法有很多，比如动物园里面成双成对，只有一种动物就一只…… 是一道比较难想出方法的题，因为规定了线性时间复杂度和
     * 不使用额外空间。
     * ---------------------------------------------------------------------------------------------------------
     * 时间复杂度：O(n)  空间复杂度：O(1)
     * ---------------------------------------------------------------------------------------------------------
     * 题目解法：位运算中的异或运算：n⊕0=n; n⊕n=0; 比较好理解的就是，同为0，异为n。
     */
    public static void main(String[] args) {
        int[] nums = {1, 1, 2, 2, 3, 3, 4};
        int i = singleNumber(nums);
        System.out.println(i);
    }

    /**
     * 异或法
     */
    public static int singleNumber(int[] nums) {
        // 设置单独的元素初始值为0
        int single = 0;
        // 遍历数组
        // 过程如下：0⊕1=1，1⊕1=0，0⊕2=2，2⊕2=0，0⊕3=3，3⊕3=0，0⊕4=4
        // 实际上就是有相同元素，自己就消掉了，留下的就是那个独立的值。
        for (int num : nums) {
            single ^= num;
        }
        return single;
    }

}
