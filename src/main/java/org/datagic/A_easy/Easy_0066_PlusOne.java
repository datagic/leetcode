package org.datagic.A_easy;

import java.util.Arrays;

/**
 * Desc: 加一
 * Author: datagic (云瞻)
 * CreateDate: 2020/7/30 2:44 下午
 * Blog: datagic.top
 * 公众号: datagator (大数据领航员)
 */
public class Easy_0066_PlusOne {
    /**
     * 题目：给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。
     * 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。
     * 你可以假设除了整数 0 之外，这个整数不会以零开头。
     * ---------------------------------------------------------------------------------------------------------
     * 示例 1:
     * 输入: [1,2,3]
     * 输出: [1,2,4]
     * 解释: 输入数组表示数字 123。
     * 示例 2:
     * 输入: [4,3,2,1]
     * 输出: [4,3,2,2]
     * 解释: 输入数组表示数字 4321。
     * ---------------------------------------------------------------------------------------------------------
     * 题目解析：本题不要理解复杂，其实就是题目"加一"，一个数字加一只有三种情况
     * 末尾数字加一无进位；末尾数字加一有进位；最高位为9+进位==>产生更高位。
     * 40->41    49->50    99->100
     * ---------------------------------------------------------------------------------------------------------
     * 时间复杂度：O(n)  空间复杂度：O(n)
     * ---------------------------------------------------------------------------------------------------------
     * 题目解法：
     * 根据上面解析的三种情况，分情况处理即可。
     */

    public static void main(String[] args) {
        int[] nums = {5, 9, 9};
        int[] result = plusOne(nums);
        System.out.println(Arrays.toString(result));
    }

    public static int[] plusOne(int[] nums) {
        // 获取数组长度
        int length = nums.length;
        if (length == 0) {
            return null;
        }
        // 倒着遍历数组
        for (int i = length - 1; i >= 0; i--) {
            if (nums[i] != 9) {
                nums[i] = nums[i] + 1;
                return nums;
            } else {
                nums[i] = 0;
                // 若数组遍历完成还会经历这一步，说明数组所有位皆为9，则进一位。
                if (i == 0) {
                    // 这一步不是拷贝原数组，而是利用原数组的长度，因为原数组所有位皆为9，都进一恰好为数组元素默认值0
                    nums = new int[length + 1];
                    nums[0] = 1;
                    return nums;
                }
            }
        }
        return null;
    }
}
